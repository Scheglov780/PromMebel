<?php

namespace app\models\ar;

use Yii;

/**
 * This is the model class for table "service".
 *
 * @property int $id
 * @property string $name
 * @property string $img
 * @property string $description
 * @property string $href
 * @property int|null $order
 */
class Service extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'service';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['order'], 'integer'],
            [['img'], 'safe'],
            [['name'], 'string', 'max' => 50],
            [['description', 'href'], 'string', 'max' => 120],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Название',
            'img' => 'Изображение',
            'description' => 'Описание',
            'href' => 'Ссылка',
            'order' => 'Порядок',
        ];
    }


    public function getFullImg()
    {
        return Yii::getAlias('@service/'.$this->img);
    }

    public function beforeSave($insert)
    {
        if(!$this->isAttributeChanged('img')) {
            return parent::beforeSave($insert);
        }

        $tmpImgs = explode(',', $this->img);

        //  Повторно проверяем входные данные
        if(!is_array($tmpImgs)) {
            return $this->addError('img', 'Проблемы с сохранением изображения');
        }

        //  Валидные ли данные и есть ли данные изображения
        foreach ($tmpImgs as $tmpImg) {
            if(!file_exists(Yii::getAlias('@webroot'.$tmpImg))) {
                return $this->addError('img', 'Проблемы с сохранением изображения');
            }
        }

        //  Записываем новые файлы
        foreach ($tmpImgs as $tmpImg) {
            $imgPath = Yii::getAlias('@webroot'.$tmpImg);
            $pathInfo = pathinfo($imgPath);
            if(strpos($imgPath, 'service')) {
                $this->img = $pathInfo['basename'];
            } else {
                $newName = md5($imgPath.time()).'.'.$pathInfo['extension'];
                copy($imgPath, Yii::getAlias('@serviceroot/'.$newName));
                $this->img = $newName;
            }
        }

        return parent::beforeSave($insert);
    }

    public function afterDelete()
    {
        if(isset($this->img)) {
            if(file_exists(Yii::getAlias('@serviceroot/'.$this->img))) {
                unlink(Yii::getAlias('@serviceroot/'.$this->img));
            }
        }

        parent::afterDelete(); // TODO: Change the autogenerated stub
    }
}
